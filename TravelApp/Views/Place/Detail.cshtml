@using System.Security.Claims
@if (Model != null)
{
    <!-- Page Content -->
    <div class="container">

        <!-- Portfolio Item Heading -->
        <h1 class="my-4">
            @Html.Raw(Model.Title)
           @*  <small>Secondary Text</small> *@
        </h1>

        <!-- Portfolio Item Row -->
        <div class="row">

            <div class="col-md-8">
                <img class="img-fluid" src="@Url.Content("~/images/" + Model.Image)" alt="">
            </div>

            <div class="col-md-4">
                <h3 class="my-3">Description</h3>
                <p>@Model.Description</p>
                <h3 class="my-3">Location</h3>
                <ul>
                    <li>@Html.Raw(Model.Address.Country)</li>
                    <li>@Html.Raw(Model.Address.City)</li>
                    <li>@Html.Raw(Model.Address.Street)</li>
                    <li>@Model.PlaceCategory</li>                   
                </ul>
                <h3 class="my-3">User information</h3>
                <ul>
                    <li>Email: @User.Identity.Name</li>
                </ul>
            </div>

        </div>
        <!-- /.row -->
        <!-- Tips Block -->
        <div class="tips">
            <h2>Tips for this place:</h2>
            @if (Model.Tips != null && Model.Tips.Count > 0)
            {
                <ul id="tipsList">
                    @foreach (var tip in Model.Tips)
                    {
                        <li id="tip-@tip.Id">
                            @tip.Content
                            @if (User.Identity.IsAuthenticated && tip.UserId == User.FindFirstValue(ClaimTypes.NameIdentifier))
                            {
                                <button onclick="deleteTip(@tip.Id)" class="btn btn-sm btn-danger">Delete</button>
                            }
                        </li>
                    }
                </ul>
            }
            else
            {
                <p>No tips available for this place.</p>
            }
        </div>

        <!-- Add Tip Form -->
        <form method="post" action="@Url.Action("AddTip", "Place")">
            <input type="hidden" name="placeId" value="@Model.Id" />
            <textarea name="tipContent" rows="3" class="form-control tip-content-input" required></textarea>
            <button type="submit" class="btn btn-primary add-tip-btn btn-margin">Add Tip</button>
        </form>

        <!-- Yandex Maps Container -->
        <div id="yandexMap" style="height: 500px; margin-bottom: 20px; margin-top: 20px;"></div>

        <!-- Bing Maps Container -->
        <div id="bingMap" style="height: 500px; margin-bottom: 20px; margin-top: 20px;"></div>

        <!-- Related Projects Row -->
       @*  <h3 class="my-4">Related Projects</h3>

        <div class="row">

            <div class="col-md-3 col-sm-6 mb-4">
                <a href="#">
                    <img class="img-fluid" src="https://via.placeholder.com/500x300" alt="">
                </a>
            </div>

            <!-- Add more related projects if needed -->

        </div> *@
        <!-- /.row -->

    </div>
    <!-- /.container -->
    <!-- Bing Maps API script with callback -->
    <script type="text/javascript" src="https://www.bing.com/api/maps/mapcontrol?key=Aq_d0lf66EmUHlozFnSN8OhgTI3jDwVpvu8t1tMCbSGCY6abJtbv4hvyCSD0UAZU&callback=loadMapScenario"></script>

    <!-- Yandex Maps API script with callback -->
    <script src="https://api-maps.yandex.ru/2.1/?apikey=c210afef-f7ed-4197-95cb-3c4006f9b01a&lang=ru_RU" type="text/javascript"></script>

    <!-- Bing Maps REST Services geocoding script -->
    <script type="text/javascript">
        function loadMapScenario() {
            var map;

            // Create the map
            map = new Microsoft.Maps.Map(document.getElementById('bingMap'), {
                credentials: 'Aq_d0lf66EmUHlozFnSN8OhgTI3jDwVpvu8t1tMCbSGCY6abJtbv4hvyCSD0UAZU',
                mapTypeId: Microsoft.Maps.MapTypeId.road,
                zoom: 15 // Adjust the zoom level as needed
            });

            var geocodeAddress = function (address) {
                var bingMapsKey = 'Aq_d0lf66EmUHlozFnSN8OhgTI3jDwVpvu8t1tMCbSGCY6abJtbv4hvyCSD0UAZU';
                var bingMapsGeocodingUrl = 'https://dev.virtualearth.net/REST/v1/Locations?q=' + encodeURIComponent(address) + '&key=' + bingMapsKey;

                fetch(bingMapsGeocodingUrl)
                    .then(function (response) {
                        return response.json();
                    })
                    .then(function (data) {
                        if (data && data.resourceSets && data.resourceSets.length > 0 && data.resourceSets[0].resources.length > 0) {
                            var location = new Microsoft.Maps.Location(data.resourceSets[0].resources[0].point.coordinates[0], data.resourceSets[0].resources[0].point.coordinates[1]);
                            map.setView({ center: location, zoom: 15 });

                            // Create a pushpin at the specified location
                            var title = '@Html.Raw(Model.Title)';
                            var subTitle = '@Html.Raw(Model.Address.City)';
                            var pin = new Microsoft.Maps.Pushpin(location, {
                                title: title,
                                subTitle: subTitle
                            });

                            // Add the pushpin to the map
                            map.entities.push(pin);
                        } else {
                            console.log('Location not found');
                        }
                    })
                    .catch(function (error) {
                        console.error('Error fetching geocoding data:', error);
                    });
            };

            // Call geocodeAddress with your address string
            var country = '@Html.Raw(Model.Address.Country)';
            var city = '@Html.Raw(Model.Address.City)';
            var street = '@Html.Raw(Model.Address.Street)';
            var address = country + ', ' + city + ', ' + street;
            geocodeAddress(address);

            // Add route button
            var searchManager = Microsoft.Maps.Search.SearchManager(map);
            Microsoft.Maps.Events.addHandler(map, 'click', function () {
                searchManager.reverseGeocode(map.getCenter(), function (result) {
                    if (result && result.results && result.results.length > 0) {
                        var waypoint = result.results[0].location;
                        var userLocation = new Microsoft.Maps.Location(position.coords.latitude, position.coords.longitude);
                        var userWaypoint = new Microsoft.Maps.Directions.Waypoint({ location: userLocation });
                        var directionsManager = new Microsoft.Maps.Directions.DirectionsManager(map);
                        directionsManager.setRequestOptions({
                            routeMode: Microsoft.Maps.Directions.RouteMode.driving
                        });
                        directionsManager.addWaypoint(userWaypoint);
                        directionsManager.addWaypoint(waypoint);


                        directionsManager.setRenderOptions({ itineraryContainer: '#directionsPanel' });
                        directionsManager.calculateDirections();
                    }
                });
            });
        }

        // Yandex Maps Initialization Script
        function loadYandexMap() {
            ymaps.ready(init);

            function init() {
                var myMap = new ymaps.Map("yandexMap", {
                    center: [55.76, 37.64], // Установите центр карты на нужные вам координаты
                    zoom: 15
                });

                var geocodeAddress = function (address) {
                    ymaps.geocode(address)
                        .then(function (res) {
                            var coordinates = res.geoObjects.get(0).geometry.getCoordinates();
                            myMap.setCenter(coordinates, 15);

                            // Создайте метку на карте
                            var title = '@Html.Raw(Model.Title)';
                            var subTitle = '@Html.Raw(Model.Address.City)';
                            var myPlacemark = new ymaps.Placemark(coordinates, {
                                hintContent: title,
                                balloonContent: subTitle
                            });

                            // Добавьте метку на карту
                            myMap.geoObjects.add(myPlacemark);
                        })
                        .catch(function (error) {
                            console.error('Error fetching geocoding data:', error);
                        });
                };

                // Call geocodeAddress with your address string
                var country = '@Html.Raw(Model.Address.Country)';
                var city = '@Html.Raw(Model.Address.City)';
                var street = '@Html.Raw(Model.Address.Street)';
                var address = country + ', ' + city + ', ' + street;
                geocodeAddress(address);

                // Add route button
                myMap.controls.add('routeButtonControl', {
                    float: 'right'
                });

                // Add route from user location to the specified location
                myMap.controls.get('routeButtonControl').routePanel.state.set({
                    from: '', // Откуда
                    to: address // Куда
                });
            }
        }

        // Вызов инициализации Яндекс Карт
        ymaps.ready(function () {
            loadYandexMap();
        });
        // Вызов инициализации Bing Maps
        loadMapScenario();

        function deleteTip(tipId) {
            if (confirm('Are you sure you want to delete this tip?')) {
                $.ajax({
                    url: '@Url.Action("DeleteTip", "Place")',
                    type: 'POST',
                    data: { tipId: tipId },
                    success: function () {
                        // Успешно удалено, удаляем элемент из списка
                        $('#tip-' + tipId).remove();
                    },
                    error: function () {
                        alert('An error occurred while deleting the tip.');
                    }
                });
            }
        }
    </script>
}
else
{
    <p>No data available</p>
}
